diff --git a/dist/components/layout/root-toggle.js b/dist/components/layout/root-toggle.js
index 2318de1eb7401ae6e17bffbcbe8ea48772a55237..1c5d5bdcaa635de0d4ea4f765d908251c7218a7f 100644
--- a/dist/components/layout/root-toggle.js
+++ b/dist/components/layout/root-toggle.js
@@ -12,10 +12,11 @@ export function RootToggle({ options, placeholder, ...props }) {
     const [open, setOpen] = useState(false);
     const { closeOnRedirect } = useSidebar();
     const pathname = usePathname();
+    const decodedPathname = decodeURIComponent(pathname);
     const selected = useMemo(() => {
         return options.findLast((item) => item.urls
-            ? item.urls.has(pathname.endsWith('/') ? pathname.slice(0, -1) : pathname)
-            : isActive(item.url, pathname, true));
+            ? item.urls.has(decodedPathname.endsWith('/') ? decodedPathname.slice(0, -1) : decodedPathname)
+            : isActive(item.url, decodedPathname, true));
     }, [options, pathname]);
     const onClick = () => {
         closeOnRedirect.current = false;
diff --git a/dist/components/layout/sidebar.js b/dist/components/layout/sidebar.js
index f70f4400e1c23a0b8b169edf8c67f923d4ff276e..3dcfd4e5b82253f2b8a4aba2db17bcd5948cc364 100644
--- a/dist/components/layout/sidebar.js
+++ b/dist/components/layout/sidebar.js
@@ -103,7 +103,7 @@ export function SidebarSeparator(props) {
 }
 export function SidebarItem({ icon, ...props }) {
     const pathname = usePathname();
-    const active = props.href !== undefined && isActive(props.href, pathname, false);
+    const active = props.href !== undefined && isActive(props.href, decodeURIComponent(pathname), false);
     const { prefetch, level } = useInternalContext();
     return (_jsxs(Link, { ...props, "data-active": active, className: cn(itemVariants({ active }), props.className), prefetch: prefetch, style: {
             paddingInlineStart: getOffset(level),
diff --git a/dist/contexts/tree.js b/dist/contexts/tree.js
index 8127493c994c5540278c523f6f1306662f9f8d5c..3f97f9988029097d66b2fb2a8bf47b0f064eca7d 100644
--- a/dist/contexts/tree.js
+++ b/dist/contexts/tree.js
@@ -12,7 +12,7 @@ export function TreeContextProvider(props) {
     // using the id here to make sure this never happens
     // eslint-disable-next-line react-hooks/exhaustive-deps
     const tree = useMemo(() => props.tree, [props.tree.$id ?? props.tree]);
-    const path = useMemo(() => searchPath(tree.children, pathname) ?? [], [tree, pathname]);
+    const path = useMemo(() => searchPath(tree.children, decodeURIComponent(pathname)) ?? [], [tree, pathname]);
     const root = path.findLast((item) => item.type === 'folder' && item.root) ?? tree;
     root.$id ?? (root.$id = String(nextIdRef.current++));
     return (_jsx(TreeContext.Provider, { value: useMemo(() => ({ root }), [root]), children: _jsx(PathContext.Provider, { value: path, children: props.children }) }));
diff --git a/dist/layouts/docs/page-client.js b/dist/layouts/docs/page-client.js
index d421e84f95b2931c0eef953cc220731fd20b31e7..402a987eec2735fbb436eb78400501d8cb90372b 100644
--- a/dist/layouts/docs/page-client.js
+++ b/dist/layouts/docs/page-client.js
@@ -123,7 +123,7 @@ export function PageFooter({ items, ...props }) {
         const cached = listCache.get(root);
         const list = cached ?? scanNavigationList(root.children);
         listCache.set(root, list);
-        const idx = list.findIndex((item) => isActive(item.url, pathname, false));
+        const idx = list.findIndex((item) => isActive(item.url,  decodeURIComponent(pathname), false));
         if (idx === -1)
             return {};
         return {
diff --git a/dist/layouts/notebook-client.js b/dist/layouts/notebook-client.js
index 5dfa63c1ece5361d02c1c9094ba23d61e7d07e72..d999128ff0a402059617b263f2f53ce8f9d8decc 100644
--- a/dist/layouts/notebook-client.js
+++ b/dist/layouts/notebook-client.js
@@ -38,9 +38,10 @@ export function LayoutTabs(props) {
 export function LayoutTab(item) {
     const { closeOnRedirect } = useSidebar();
     const pathname = usePathname();
+    const decodedPathname = decodeURIComponent(pathname)
     const selected = item.urls
-        ? item.urls.has(pathname.endsWith('/') ? pathname.slice(0, -1) : pathname)
-        : isActive(item.url, pathname, true);
+        ? item.urls.has(decodedPathname.endsWith('/') ? decodedPathname.slice(0, -1) : decodedPathname)
+        : isActive(item.url, decodedPathname, true);
     return (_jsx(Link, { className: cn('inline-flex items-center py-2.5 border-b border-transparent gap-2 text-fd-muted-foreground text-sm text-nowrap', selected && 'text-fd-foreground font-medium border-fd-primary'), href: item.url, onClick: () => {
             closeOnRedirect.current = false;
         }, children: item.title }));
